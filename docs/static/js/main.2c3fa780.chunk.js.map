{"version":3,"sources":["components/LoadingMask.jsx","components/Laptop.jsx","App.js","api/mockserver.js","index.js"],"names":["LoadingMask","className","Laptop","laptop","useState","showDetail","setShowDetail","name","onClick","brand","weigth","App","isLoading","setIsLoading","data","setData","laptops","setLaptops","descending","setDescending","useEffect","getData2","sort","a","b","type","onChange","e","search","target","value","filter","toLowerCase","includes","placeholder","map","environment","server","createServer","models","seeds","routes","this","namespace","timing","get","schema","request","makeServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAQeA,EANK,kBAClB,qBAAKC,UAAU,UAAf,SACE,2CCUWC,EAZA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EACSC,oBAAS,GADlB,mBACpBC,EADoB,KACRC,EADQ,KAG3B,OACE,sBAAKL,UAAU,OAAf,UACE,6BAAKE,EAAOI,OACZ,wBAAQC,QAAS,kBAAMF,GAAeD,IAAtC,SAAoDA,EAAa,YAAc,cAC9EA,GAAc,wCAAWF,EAAOM,MAAM,uBAAxB,WAAsCN,EAAOO,cCqDnDC,EAzDH,WAAO,IAAD,EAEkBP,oBAAS,GAF3B,mBAETQ,EAFS,KAEEC,EAFF,OAGQT,mBAAS,IAHjB,mBAGTU,EAHS,KAGHC,EAHG,OAIcX,mBAAS,IAJvB,mBAITY,EAJS,KAIAC,EAJA,OAKoBb,oBAAS,GAL7B,mBAKTc,EALS,KAKGC,EALH,KA2BhBC,qBAAU,YAXO,WACf,IAAMJ,EAAU,CACd,CAAEP,MAAO,QAASF,KAAM,cAAeG,OAAQ,IAC/C,CAAED,MAAO,OAAQF,KAAM,MAAOG,OAAQ,KACtC,CAAED,MAAO,SAAUF,KAAM,MAAOG,OAAQ,MAE1CO,EAAWD,GACXD,EAAQC,GACRH,GAAa,GAIbQ,KACC,IAaH,OACE,sBAAKpB,UAAU,MAAf,UACE,mCACE,yCACA,wBAAQO,QAVM,WAClBM,EAAKQ,MAAK,SAACC,EAAGC,GAAJ,OAAUN,EAAaK,EAAEb,OAASc,EAAEd,OAASa,EAAEb,OAASc,EAAEd,UACpEK,EAAQ,YAAID,IACZK,GAAeD,IAOX,kBAA4C,uBAC5C,uBAAOO,KAAK,OAAQC,SAhBL,SAACC,GACpB,IAAMC,EAASD,EAAEE,OAAOC,MACxBf,EAAQC,EAAQe,QAAO,SAAA5B,GAAM,OAAIA,EAAOI,KAAKyB,cAAcC,SAASL,EAAOI,oBAc3BE,YAAY,iBAE1D,qBAAKjC,UAAU,iBAAf,SACGa,EAAKqB,KAAI,SAAAhC,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,GAArBA,EAAOI,WAEzCK,GAAa,cAAC,EAAD,Q,SCxDb,WAA2D,IAAD,yDAAJ,GAAI,IAApCwB,mBAAoC,MAAtB,cAAsB,EAC3DC,EAASC,YAAa,CACxBF,cACAG,OAAQ,GAERC,MAJwB,SAIlBH,KAENI,OANwB,WAOtBC,KAAKC,UAAY,cACjBD,KAAKE,OAAS,IAEdF,KAAKG,IAAI,KAAK,SAACC,EAAQC,GACrB,MAAO,CACL,CAAEtC,MAAO,QAASF,KAAM,cAAeG,OAAQ,IAC/C,CAAED,MAAO,OAAQF,KAAM,MAAOG,OAAQ,KACtC,CAAED,MAAO,SAAUF,KAAM,MAAOG,OAAQ,YCVlDsC,CAAW,CAAEZ,YAAa,gBAE1Ba,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2c3fa780.chunk.js","sourcesContent":["import React from \"react\";\n\nconst LoadingMask = () => (\n  <div className=\"loading\">\n    <p>Loading</p>  \n  </div>\n);\n\nexport default LoadingMask;","import React, {useState} from \"react\";\n\nconst Laptop = ({laptop}) => {\n  const [showDetail, setShowDetail] = useState(false)\n\n  return (\n    <div className=\"card\">\n      <h2>{laptop.name}</h2>\n      <button onClick={() => setShowDetail(!showDetail)}>{showDetail ? \"Show less\" : \"Show more\"}</button>\n      {showDetail && <p>Brand: {laptop.brand}<br/>Weigth: {laptop.weigth}</p>}\n    </div>\n  )\n}\n\nexport default Laptop\n","import './App.css'\nimport React, {useState, useEffect} from \"react\";\nimport LoadingMask from './components/LoadingMask'\nimport Laptop from './components/Laptop';\n\nconst App = () => {\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState([])\n  const [laptops, setLaptops] = useState([])\n  const [descending, setDescending] = useState(true)\n\n\n  const getData = async () => {\n    const response = await fetch(\"/api/laptop\")\n    const laptops = await response.json()\n    setLaptops(laptops)\n    setData(laptops)\n    setIsLoading(false)\n  }\n\n  const getData2 = () => {\n    const laptops = [\n      { brand: \"Apple\", name: \"MacBook Air\", weigth: 0.5 },\n      { brand: \"Asus\", name: \"P30\", weigth: 1.7 },\n      { brand: \"Lenovo\", name: \"A50\", weigth: 1.5 },\n    ]\n    setLaptops(laptops)\n    setData(laptops)\n    setIsLoading(false)\n  }\n\n  useEffect(() => { \n    getData2()\n  }, [])\n\n  const handleChange = (e) => {\n    const search = e.target.value\n    setData(laptops.filter(laptop => laptop.name.toLowerCase().includes(search.toLowerCase())))\n  }\n\n  const handleClick = () => {\n    data.sort((a, b) => descending ? a.weigth < b.weigth : a.weigth > b.weigth)\n    setData([...data])\n    setDescending(!descending)\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Laptops</h1>\n        <button onClick={handleClick} >Sort</button><br />\n        <input type=\"text\"  onChange={handleChange} placeholder=\"Search...\" />\n      </header>\n      <div className=\"card-container\">\n        {data.map(laptop => <Laptop key={laptop.name} laptop={laptop} />)}\n      </div>\n      {isLoading && <LoadingMask />}\n    </div>\n  )\n}\n\nexport default App\n","import { createServer } from 'miragejs';\nexport function makeServer({ environment = 'development' } = {}) {\n  let server = createServer({\n    environment,\n    models: {\n    },\n    seeds(server) {\n    },\n    routes() {\n      this.namespace = '/api/laptop';\n      this.timing = 2000\n\n      this.get('/', (schema, request) => {\n        return [\n          { brand: \"Apple\", name: \"MacBook Air\", weigth: 0.5 },\n          { brand: \"Asus\", name: \"P30\", weigth: 1.7 },\n          { brand: \"Lenovo\", name: \"A50\", weigth: 1.5 },\n        ]\n      })\n    },\n  });\n  return server;\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { makeServer } from './api/mockserver'\nmakeServer({ environment: 'development' })\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}